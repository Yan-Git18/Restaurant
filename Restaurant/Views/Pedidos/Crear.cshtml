@model Restaurant.ViewModels.PedidoCreateEditVm

@{
    ViewData["Title"] = "Nuevo Pedido";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/Dashboard.css" />
</head>
<body>
    <div class="container-fluid py-4">

        <!-- Header -->
        <div class="dashboard-header mb-4">
            <h1>Nuevo Pedido</h1>
            <p class="mb-0">Complete los datos del pedido y seleccione los productos</p>
        </div>

        <!-- Card Crear Pedido -->
        <div class="card border-start border-4 border-success shadow-sm">
            <div class="card-body">
                <form asp-action="Crear" method="post">
                    @Html.AntiForgeryToken()

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Cliente</label>
                            <select asp-for="ClienteId" class="form-select" asp-items="ViewBag.Clientes">
                                <option value="">-- Seleccione Cliente --</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Mesa</label>
                            <select asp-for="MesaId" class="form-select" asp-items="ViewBag.Mesas">
                                <option value="">-- Seleccione Mesa --</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Tipo de Pedido</label>
                            <select asp-for="TipoPedido" class="form-select">
                                <option value="Salon">En salón</option>
                                <option value="Delivery">Delivery</option>
                            </select>
                        </div>
                    </div>

                    <!-- Tabla de productos -->
                    <h5 class="mb-3">Productos</h5>
                    <div class="table-responsive mb-3">
                        <table class="table table-bordered align-middle" id="tablaProductos">
                            <thead class="table-light">
                                <tr>
                                    <th style="width: 40%">Producto</th>
                                    <th style="width: 15%">Precio</th>
                                    <th style="width: 15%">Cantidad</th>
                                    <th style="width: 20%">Subtotal</th>
                                    <th style="width: 10%">Acción</th>
                                </tr>
                            </thead>
                            <tbody id="detallePedido"></tbody>
                        </table>
                    </div>

                    <button type="button" class="btn btn-info mb-3" id="btnAgregar">
                        <i class="fas fa-plus-circle"></i> Agregar Producto
                    </button>

                    <!-- Total -->
                    <div class="d-flex justify-content-end mb-3">
                        <h4>Total: <span id="totalGeneral">S/ 0.00</span></h4>
                        <input type="hidden" asp-for="Total" id="Total" />
                    </div>

                    <div class="text-end">
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Cancelar
                        </a>
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-save"></i> Guardar Pedido
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</body>
</html>

@section Scripts {
    <script>
        @using System.Text.Json
        let productos = @Html.Raw(JsonSerializer.Serialize(ViewBag.ProductosJson));


        // contador global para índices consecutivos
        let index = 0;

        document.getElementById("btnAgregar").addEventListener("click", function () {
            let rowId = index++;

            let row = `
                <tr data-id="${rowId}">
                    <td>
                        <select class="form-select productoSelect" name="Detalles[${rowId}].ProductoId" required>
                            <option value="">-- Seleccione --</option>
                            ${productos.map(p => `<option value="${p.productoId}" data-precio="${p.precio}">${p.nombre}</option>`).join('')}
                        </select>
                    </td>
                    <td><input type="text" class="form-control precio" name="Detalles[${rowId}].Precio" readonly /></td>
                    <td><input type="number" class="form-control cantidad" name="Detalles[${rowId}].Cantidad" min="1" value="1" /></td>
                    <td><input type="text" class="form-control subtotal" readonly /></td>
                    <td><button type="button" class="btn btn-danger btn-sm btnEliminar"><i class="fas fa-trash"></i></button></td>
                </tr>`;

            document.querySelector("#detallePedido").insertAdjacentHTML("beforeend", row);
        });

        // Delegación de eventos
        document.addEventListener("change", function (e) {
            if (e.target.classList.contains("productoSelect")) {
                let row = e.target.closest("tr");
                let precio = e.target.selectedOptions[0].dataset.precio || 0;
                row.querySelector(".precio").value = precio;
                calcularSubtotal(row);
            }

            if (e.target.classList.contains("cantidad")) {
                let row = e.target.closest("tr");
                calcularSubtotal(row);
            }
        });

        document.addEventListener("click", function (e) {
            if (e.target.closest(".btnEliminar")) {
                e.target.closest("tr").remove();
                calcularTotalGeneral();
            }
        });

        function calcularSubtotal(row) {
            let precio = parseFloat(row.querySelector(".precio").value) || 0;
            let cantidad = parseInt(row.querySelector(".cantidad").value) || 0;
            let subtotal = precio * cantidad;
            row.querySelector(".subtotal").value = subtotal.toFixed(2);
            calcularTotalGeneral();
        }

        function calcularTotalGeneral() {
            let total = 0;
            document.querySelectorAll(".subtotal").forEach(s => {
                total += parseFloat(s.value) || 0;
            });
            document.getElementById("totalGeneral").innerText = "S/ " + total.toFixed(2);
            document.getElementById("Total").value = total.toFixed(2);
        }
    </script>
}
